@import 'node_modules/@angular/material/theming';
// Include non-theme styles for core.
@include mat-core();

/* Color definitions */
$mat-custom-primary: (
  50 : #e3ecf4,
  100 : #b9d1e4,
  200 : #8ab2d2,
  300 : #5b93c0,
  400 : #377bb3,
  500 : #1464a5,
  600 : #125c9d,
  700 : #0e5293,
  800 : #0b488a,
  900 : #063679,
  A100 : #a8c7ff,
  A200 : #75a7ff,
  A400 : #4286ff,
  A700 : #2876ff,
  contrast: (50 : #000000, 100 : #000000, 200 : #000000, 300 : #000000, 400 : #ffffff, 500 : #ffffff, 600 : #ffffff, 700 : #ffffff, 800 : #ffffff, 900 : #ffffff, A100 : #000000, A200 : #000000, A400 : #ffffff, A700 : #ffffff)
);

$mat-custom-accent: (
  50 : #e3ecf4,
  100 : #b9d1e4,
  200 : #8ab2d2,
  300 : #5b93c0,
  400 : #377bb3,
  500 : #1464a5,
  600 : #125c9d,
  700 : #0e5293,
  800 : #0b488a,
  900 : #063679,
  A100 : #a8c7ff,
  A200 : #75a7ff,
  A400 : #4286ff,
  A700 : #2876ff,
  contrast: (50 : #000000, 100 : #000000, 200 : #000000, 300 : #000000, 400 : #ffffff, 500 : #ffffff, 600 : #ffffff, 700 : #ffffff, 800 : #ffffff, 900 : #ffffff, A100 : #000000, A200 : #000000, A400 : #ffffff, A700 : #ffffff)
);

$primary: mat-palette($mat-custom-primary);
$accent: mat-palette($mat-custom-accent);

/*Application background-color*/
$app-background-color: #eaeaea;

// Background palette for light themes.
@function ontimize-light-theme-background($primary) {
  @return (level-0: mix($app-background-color, mat-color($primary), 97.2%),
    level-04: #f2f2f2,
    level-06: #f6f6f6,
    level-08: #fafafa,
    level-1: white);
}

// Background palette for dark themes.
@function ontimize-dark-theme-background($primary) {
  @return (level-0: mix(#171717, mat-color($primary), 94%),
    level-04: mix(#1E1E1E, mat-color($primary), 94%),
    level-06: mix(#2C2C2C, mat-color($primary), 94%),
    level-08: mix(#333333, mat-color($primary), 94%),
    level-1: mix(#383838, mat-color($primary), 94%));
}





// Creates a container object for a light theme to be given to individual component theme mixins.
@function o-mat-light-theme($primary, $accent, $warn: mat-palette($mat-red)) {
  $mat-theme: mat-light-theme($primay, $accent, $warn);
  @debug "material theme: #{$mat-theme}";
  $background: map-get($mat-theme, background);
  $o-mat-light-theme-background: map_merge(ontimize-light-theme-background($primary), $background);
  @debug "ontimize l theme background: #{ontimize-light-theme-background($primary)}";
  @debug "material background: #{$background}";
  $return: (primary: $primary,
    accent: $accent,
    warn: $warn,
    is-dark: false,
    foreground: map-get($mat-theme, foreground),
    background: $o-mat-light-theme-background);
  @debug "return theme #{$return}";
  @return $return;
}

// Creates a container object for a dark theme to be given to individual component theme mixins.
@function o-mat-dark-theme($primary, $accent, $warn: mat-palette($mat-red)) {
  $mat-theme: mat-dark-theme($primay, $accent, $warn);
  $background: map-get($mat-theme, background);
  $o-mat-dark-theme-background: map_merge(ontimize-dark-theme-background($primary), $background);
  @return (primary: $primary,
    accent: $accent,
    warn: $warn,
    is-dark: true,
    foreground: map-get($mat-theme, foreground),
    background: $o-mat-dark-theme-background);
}

/* Light theme */
$theme: o-mat-light-theme($primary, $accent);

/* Dark theme */
$dark-theme: o-mat-dark-theme($primary, $accent);